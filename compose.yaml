services:
  ###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: [
        "CMD",
        "pg_isready",
        "-d",
        "${POSTGRES_DB:-app}",
        "-U",
        "${POSTGRES_USER:-app}",
      ]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
  ###< doctrine/doctrine-bundle ###
  redis:
    image: redis:${REDIS_VERSION:-7}-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - redis_data:/data:rw
  meilisearch:
    image: getmeili/meilisearch:${MEILISEARCH_VERSION:-v1.10}
    environment:
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY:-!MasterChangeMe!}
    volumes:
      - meili_data:/meili_data:rw
    healthcheck:
      test: set -o pipefail;curl -fsS http://localhost:7700/health | grep -q '{"status":"available"}'
      retries: 3
      timeout: 5s
  sqlrunner:
    image: ghcr.io/database-playground/sqlrunner-v2:main
  php:
    image: ${IMAGES_PREFIX:-}app-php
    restart: unless-stopped
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, php:80
      DATABASE_URL: "postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=${POSTGRES_VERSION:-16}&charset=${POSTGRES_CHARSET:-utf8}"
      REDIS_URI: "redis://redis:6379"
      MEILISEARCH_URL: "http://meilisearch:7700"
      MEILISEARCH_API_KEY: ${MEILI_MASTER_KEY:-!MasterChangeMe!}
      SQLRUNNER_URL: "http://sqlrunner:8080"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

volumes:
  ###> doctrine/doctrine-bundle ###
  database_data:
  ###< doctrine/doctrine-bundle ###
  redis_data:
  caddy_data:
  caddy_config:
  meili_data:
